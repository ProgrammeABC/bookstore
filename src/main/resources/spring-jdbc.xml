<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--	配置组件扫描器-->
	<context:component-scan base-package="com.bookstore.dao,com.bookstore.service"></context:component-scan>

<!--    配置连接池-->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<!--		注入连接池所需的用户名、密码、驱动类、连接的URL地址-->
		<property name="username" value="root"></property>
		<property name="password" value="******"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/vincent_book?allowPublicKeyRetrieval=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC"></property>
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<!--		初始化连接数量-->
		<property name="initialSize" value="5"></property>
		<!--		最大连接-->
		<property name="maxActive" value="20"></property>
		<!--		最小空闲连接-->
		<property name="minIdle" value="10"></property>
	</bean>

<!--	配置SqlSessionFactoryBean，由Spring接管SqlSessionFactory对象
		此时生成的SqlSession对象也会由Spring进行管理-->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
<!--		注入连接池-->
		<property name="dataSource" ref="druidDataSource"></property>
<!--		配置mybatis的主配置文件，也可以选择不配该文件，直接配置对应的选项-->
		<property name="configLocation" value="classpath:mybatis.xml"></property>

<!--		<property name="mapperLocations" value="classpath:mapper/**"></property>-->
<!--		<property name="typeAliasesPackage" value="com.igeek.entity"></property>-->
	</bean>

<!--	配置Mybatis的映射扫描器-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bookstore.dao"></property>
	</bean>


<!--	配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druidDataSource"></property>
	</bean>

<!--	配置事务通知-->
	<tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" isolation="READ_COMMITTED" propagation="REQUIRED"/>
			<tx:method name="update*" isolation="READ_COMMITTED" propagation="REQUIRED"></tx:method>
			<tx:method name="del*" isolation="READ_COMMITTED" propagation="REQUIRED"></tx:method>
			<tx:method name="add*" isolation="READ_COMMITTED" propagation="REQUIRED"></tx:method>
		</tx:attributes>
	</tx:advice>

<!--	切入AOP事务-->
	<aop:config>
		<aop:pointcut id="p1" expression="execution(* com.bookstore.service.*.*(..))"/>
		<aop:advisor advice-ref="transactionInterceptor" pointcut-ref="p1"></aop:advisor>
	</aop:config>

</beans>
